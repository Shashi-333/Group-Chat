"""Add group and groupmember table

Revision ID: b7ec08630fe0
Revises: 
Create Date: 2023-04-21 14:58:45.531909

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'b7ec08630fe0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=25),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=25),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=25),
               nullable=False)
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['password'])

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.alter_column('groupname',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=25),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=25),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=25),
               nullable=False)
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['password'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.String(length=25),
               type_=mysql.VARCHAR(length=45),
               nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.String(length=25),
               type_=mysql.VARCHAR(length=45),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=25),
               type_=mysql.VARCHAR(length=45),
               nullable=True)

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.alter_column('groupname',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)

    with op.batch_alter_table('admin', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.String(length=25),
               type_=mysql.VARCHAR(length=45),
               nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.String(length=25),
               type_=mysql.VARCHAR(length=45),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=25),
               type_=mysql.VARCHAR(length=45),
               nullable=True)

    # ### end Alembic commands ###
